{"id":"node_modules/core-js/internals/flatten-into-array.js","dependencies":[{"name":"/Users/1infiniteloop/Projects/tutorials/intro-to-react-and-firebase/package.json","includedInParent":true,"mtime":1573574947556},{"name":"/Users/1infiniteloop/Projects/tutorials/intro-to-react-and-firebase/.babelrc","includedInParent":true,"mtime":1573487978998},{"name":"/Users/1infiniteloop/Projects/tutorials/intro-to-react-and-firebase/node_modules/core-js/package.json","includedInParent":true,"mtime":1573568354156},{"name":"../internals/is-array","loc":{"line":2,"column":22},"parent":"/Users/1infiniteloop/Projects/tutorials/intro-to-react-and-firebase/node_modules/core-js/internals/flatten-into-array.js","resolved":"/Users/1infiniteloop/Projects/tutorials/intro-to-react-and-firebase/node_modules/core-js/internals/is-array.js"},{"name":"../internals/to-length","loc":{"line":3,"column":23},"parent":"/Users/1infiniteloop/Projects/tutorials/intro-to-react-and-firebase/node_modules/core-js/internals/flatten-into-array.js","resolved":"/Users/1infiniteloop/Projects/tutorials/intro-to-react-and-firebase/node_modules/core-js/internals/to-length.js"},{"name":"../internals/bind-context","loc":{"line":4,"column":19},"parent":"/Users/1infiniteloop/Projects/tutorials/intro-to-react-and-firebase/node_modules/core-js/internals/flatten-into-array.js","resolved":"/Users/1infiniteloop/Projects/tutorials/intro-to-react-and-firebase/node_modules/core-js/internals/bind-context.js"}],"generated":{"js":"'use strict';\nvar isArray = require('../internals/is-array');\nvar toLength = require('../internals/to-length');\nvar bind = require('../internals/bind-context');\n\n// `FlattenIntoArray` abstract operation\n// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray\nvar flattenIntoArray = function (target, original, source, sourceLen, start, depth, mapper, thisArg) {\n  var targetIndex = start;\n  var sourceIndex = 0;\n  var mapFn = mapper ? bind(mapper, thisArg, 3) : false;\n  var element;\n\n  while (sourceIndex < sourceLen) {\n    if (sourceIndex in source) {\n      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];\n\n      if (depth > 0 && isArray(element)) {\n        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;\n      } else {\n        if (targetIndex >= 0x1FFFFFFFFFFFFF) throw TypeError('Exceed the acceptable array length');\n        target[targetIndex] = element;\n      }\n\n      targetIndex++;\n    }\n    sourceIndex++;\n  }\n  return targetIndex;\n};\n\nmodule.exports = flattenIntoArray;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/core-js/internals/flatten-into-array.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/core-js/internals/flatten-into-array.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/core-js/internals/flatten-into-array.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/core-js/internals/flatten-into-array.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/core-js/internals/flatten-into-array.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/core-js/internals/flatten-into-array.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/core-js/internals/flatten-into-array.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/core-js/internals/flatten-into-array.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/core-js/internals/flatten-into-array.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/core-js/internals/flatten-into-array.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/core-js/internals/flatten-into-array.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/core-js/internals/flatten-into-array.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/core-js/internals/flatten-into-array.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/core-js/internals/flatten-into-array.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/core-js/internals/flatten-into-array.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/core-js/internals/flatten-into-array.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/core-js/internals/flatten-into-array.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/core-js/internals/flatten-into-array.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/core-js/internals/flatten-into-array.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/core-js/internals/flatten-into-array.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/core-js/internals/flatten-into-array.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/core-js/internals/flatten-into-array.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/core-js/internals/flatten-into-array.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/core-js/internals/flatten-into-array.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/core-js/internals/flatten-into-array.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/core-js/internals/flatten-into-array.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/core-js/internals/flatten-into-array.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/core-js/internals/flatten-into-array.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/core-js/internals/flatten-into-array.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/core-js/internals/flatten-into-array.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/core-js/internals/flatten-into-array.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/core-js/internals/flatten-into-array.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/core-js/internals/flatten-into-array.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}}],"sources":{"node_modules/core-js/internals/flatten-into-array.js":"'use strict';\nvar isArray = require('../internals/is-array');\nvar toLength = require('../internals/to-length');\nvar bind = require('../internals/bind-context');\n\n// `FlattenIntoArray` abstract operation\n// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray\nvar flattenIntoArray = function (target, original, source, sourceLen, start, depth, mapper, thisArg) {\n  var targetIndex = start;\n  var sourceIndex = 0;\n  var mapFn = mapper ? bind(mapper, thisArg, 3) : false;\n  var element;\n\n  while (sourceIndex < sourceLen) {\n    if (sourceIndex in source) {\n      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];\n\n      if (depth > 0 && isArray(element)) {\n        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;\n      } else {\n        if (targetIndex >= 0x1FFFFFFFFFFFFF) throw TypeError('Exceed the acceptable array length');\n        target[targetIndex] = element;\n      }\n\n      targetIndex++;\n    }\n    sourceIndex++;\n  }\n  return targetIndex;\n};\n\nmodule.exports = flattenIntoArray;\n"},"lineCount":33}},"error":null,"hash":"1ba9068ce2786682305b830ef29b9468","cacheData":{"env":{}}}