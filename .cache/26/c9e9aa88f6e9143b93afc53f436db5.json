{"id":"node_modules/core-js/internals/parse-int.js","dependencies":[{"name":"/Users/1infiniteloop/Projects/tutorials/intro-to-react-and-firebase/package.json","includedInParent":true,"mtime":1573574947556},{"name":"/Users/1infiniteloop/Projects/tutorials/intro-to-react-and-firebase/.babelrc","includedInParent":true,"mtime":1573487978998},{"name":"/Users/1infiniteloop/Projects/tutorials/intro-to-react-and-firebase/node_modules/core-js/package.json","includedInParent":true,"mtime":1573568354156},{"name":"../internals/global","loc":{"line":1,"column":21},"parent":"/Users/1infiniteloop/Projects/tutorials/intro-to-react-and-firebase/node_modules/core-js/internals/parse-int.js","resolved":"/Users/1infiniteloop/Projects/tutorials/intro-to-react-and-firebase/node_modules/core-js/internals/global.js"},{"name":"../internals/string-trim","loc":{"line":2,"column":19},"parent":"/Users/1infiniteloop/Projects/tutorials/intro-to-react-and-firebase/node_modules/core-js/internals/parse-int.js","resolved":"/Users/1infiniteloop/Projects/tutorials/intro-to-react-and-firebase/node_modules/core-js/internals/string-trim.js"},{"name":"../internals/whitespaces","loc":{"line":3,"column":26},"parent":"/Users/1infiniteloop/Projects/tutorials/intro-to-react-and-firebase/node_modules/core-js/internals/parse-int.js","resolved":"/Users/1infiniteloop/Projects/tutorials/intro-to-react-and-firebase/node_modules/core-js/internals/whitespaces.js"}],"generated":{"js":"\nvar global = require('../internals/global');\nvar trim = require('../internals/string-trim').trim;\nvar whitespaces = require('../internals/whitespaces');\n\nvar nativeParseInt = global.parseInt;\nvar hex = /^[+-]?0[Xx]/;\nvar FORCED = nativeParseInt(whitespaces + '08') !== 8 || nativeParseInt(whitespaces + '0x16') !== 22;\n\n// `parseInt` method\n// https://tc39.github.io/ecma262/#sec-parseint-string-radix\nmodule.exports = FORCED ? function parseInt(string, radix) {\n  var S = trim(String(string));\n  return nativeParseInt(S, (radix >>> 0) || (hex.test(S) ? 16 : 10));\n} : nativeParseInt;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/core-js/internals/parse-int.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/core-js/internals/parse-int.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/core-js/internals/parse-int.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/core-js/internals/parse-int.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/core-js/internals/parse-int.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/core-js/internals/parse-int.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/core-js/internals/parse-int.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/core-js/internals/parse-int.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/core-js/internals/parse-int.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/core-js/internals/parse-int.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/core-js/internals/parse-int.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/core-js/internals/parse-int.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/core-js/internals/parse-int.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/core-js/internals/parse-int.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/core-js/internals/parse-int.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}}],"sources":{"node_modules/core-js/internals/parse-int.js":"var global = require('../internals/global');\nvar trim = require('../internals/string-trim').trim;\nvar whitespaces = require('../internals/whitespaces');\n\nvar nativeParseInt = global.parseInt;\nvar hex = /^[+-]?0[Xx]/;\nvar FORCED = nativeParseInt(whitespaces + '08') !== 8 || nativeParseInt(whitespaces + '0x16') !== 22;\n\n// `parseInt` method\n// https://tc39.github.io/ecma262/#sec-parseint-string-radix\nmodule.exports = FORCED ? function parseInt(string, radix) {\n  var S = trim(String(string));\n  return nativeParseInt(S, (radix >>> 0) || (hex.test(S) ? 16 : 10));\n} : nativeParseInt;\n"},"lineCount":16}},"error":null,"hash":"1242710651ac9b1b7e2a3ea446a46d22","cacheData":{"env":{}}}