{"id":"node_modules/core-js/modules/es.regexp.to-string.js","dependencies":[{"name":"/Users/1infiniteloop/Projects/tutorials/intro-to-react-and-firebase/package.json","includedInParent":true,"mtime":1573574947556},{"name":"/Users/1infiniteloop/Projects/tutorials/intro-to-react-and-firebase/.babelrc","includedInParent":true,"mtime":1573487978998},{"name":"/Users/1infiniteloop/Projects/tutorials/intro-to-react-and-firebase/node_modules/core-js/package.json","includedInParent":true,"mtime":1573568354156},{"name":"../internals/redefine","loc":{"line":2,"column":23},"parent":"/Users/1infiniteloop/Projects/tutorials/intro-to-react-and-firebase/node_modules/core-js/modules/es.regexp.to-string.js","resolved":"/Users/1infiniteloop/Projects/tutorials/intro-to-react-and-firebase/node_modules/core-js/internals/redefine.js"},{"name":"../internals/an-object","loc":{"line":3,"column":23},"parent":"/Users/1infiniteloop/Projects/tutorials/intro-to-react-and-firebase/node_modules/core-js/modules/es.regexp.to-string.js","resolved":"/Users/1infiniteloop/Projects/tutorials/intro-to-react-and-firebase/node_modules/core-js/internals/an-object.js"},{"name":"../internals/fails","loc":{"line":4,"column":20},"parent":"/Users/1infiniteloop/Projects/tutorials/intro-to-react-and-firebase/node_modules/core-js/modules/es.regexp.to-string.js","resolved":"/Users/1infiniteloop/Projects/tutorials/intro-to-react-and-firebase/node_modules/core-js/internals/fails.js"},{"name":"../internals/regexp-flags","loc":{"line":5,"column":20},"parent":"/Users/1infiniteloop/Projects/tutorials/intro-to-react-and-firebase/node_modules/core-js/modules/es.regexp.to-string.js","resolved":"/Users/1infiniteloop/Projects/tutorials/intro-to-react-and-firebase/node_modules/core-js/internals/regexp-flags.js"}],"generated":{"js":"'use strict';\nvar redefine = require('../internals/redefine');\nvar anObject = require('../internals/an-object');\nvar fails = require('../internals/fails');\nvar flags = require('../internals/regexp-flags');\n\nvar TO_STRING = 'toString';\nvar RegExpPrototype = RegExp.prototype;\nvar nativeToString = RegExpPrototype[TO_STRING];\n\nvar NOT_GENERIC = fails(function () { return nativeToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });\n// FF44- RegExp#toString has a wrong name\nvar INCORRECT_NAME = nativeToString.name != TO_STRING;\n\n// `RegExp.prototype.toString` method\n// https://tc39.github.io/ecma262/#sec-regexp.prototype.tostring\nif (NOT_GENERIC || INCORRECT_NAME) {\n  redefine(RegExp.prototype, TO_STRING, function toString() {\n    var R = anObject(this);\n    var p = String(R.source);\n    var rf = R.flags;\n    var f = String(rf === undefined && R instanceof RegExp && !('flags' in RegExpPrototype) ? flags.call(R) : rf);\n    return '/' + p + '/' + f;\n  }, { unsafe: true });\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/core-js/modules/es.regexp.to-string.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.to-string.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.to-string.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.to-string.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.to-string.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.to-string.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.to-string.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.to-string.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.to-string.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.to-string.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.to-string.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.to-string.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.to-string.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.to-string.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.to-string.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.to-string.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.to-string.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.to-string.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.to-string.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.to-string.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.to-string.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.to-string.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.to-string.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.to-string.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.to-string.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.to-string.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}}],"sources":{"node_modules/core-js/modules/es.regexp.to-string.js":"'use strict';\nvar redefine = require('../internals/redefine');\nvar anObject = require('../internals/an-object');\nvar fails = require('../internals/fails');\nvar flags = require('../internals/regexp-flags');\n\nvar TO_STRING = 'toString';\nvar RegExpPrototype = RegExp.prototype;\nvar nativeToString = RegExpPrototype[TO_STRING];\n\nvar NOT_GENERIC = fails(function () { return nativeToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });\n// FF44- RegExp#toString has a wrong name\nvar INCORRECT_NAME = nativeToString.name != TO_STRING;\n\n// `RegExp.prototype.toString` method\n// https://tc39.github.io/ecma262/#sec-regexp.prototype.tostring\nif (NOT_GENERIC || INCORRECT_NAME) {\n  redefine(RegExp.prototype, TO_STRING, function toString() {\n    var R = anObject(this);\n    var p = String(R.source);\n    var rf = R.flags;\n    var f = String(rf === undefined && R instanceof RegExp && !('flags' in RegExpPrototype) ? flags.call(R) : rf);\n    return '/' + p + '/' + f;\n  }, { unsafe: true });\n}\n"},"lineCount":26}},"error":null,"hash":"f205437c08f42edca85e513bc8a9b2ec","cacheData":{"env":{}}}