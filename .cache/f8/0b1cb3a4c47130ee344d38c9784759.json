{"id":"node_modules/core-js/modules/es.typed-array.subarray.js","dependencies":[{"name":"/Users/1infiniteloop/Projects/tutorials/intro-to-react-and-firebase/package.json","includedInParent":true,"mtime":1573574947556},{"name":"/Users/1infiniteloop/Projects/tutorials/intro-to-react-and-firebase/.babelrc","includedInParent":true,"mtime":1573487978998},{"name":"/Users/1infiniteloop/Projects/tutorials/intro-to-react-and-firebase/node_modules/core-js/package.json","includedInParent":true,"mtime":1573568354156},{"name":"../internals/array-buffer-view-core","loc":{"line":2,"column":34},"parent":"/Users/1infiniteloop/Projects/tutorials/intro-to-react-and-firebase/node_modules/core-js/modules/es.typed-array.subarray.js","resolved":"/Users/1infiniteloop/Projects/tutorials/intro-to-react-and-firebase/node_modules/core-js/internals/array-buffer-view-core.js"},{"name":"../internals/to-length","loc":{"line":3,"column":23},"parent":"/Users/1infiniteloop/Projects/tutorials/intro-to-react-and-firebase/node_modules/core-js/modules/es.typed-array.subarray.js","resolved":"/Users/1infiniteloop/Projects/tutorials/intro-to-react-and-firebase/node_modules/core-js/internals/to-length.js"},{"name":"../internals/to-absolute-index","loc":{"line":4,"column":30},"parent":"/Users/1infiniteloop/Projects/tutorials/intro-to-react-and-firebase/node_modules/core-js/modules/es.typed-array.subarray.js","resolved":"/Users/1infiniteloop/Projects/tutorials/intro-to-react-and-firebase/node_modules/core-js/internals/to-absolute-index.js"},{"name":"../internals/species-constructor","loc":{"line":5,"column":33},"parent":"/Users/1infiniteloop/Projects/tutorials/intro-to-react-and-firebase/node_modules/core-js/modules/es.typed-array.subarray.js","resolved":"/Users/1infiniteloop/Projects/tutorials/intro-to-react-and-firebase/node_modules/core-js/internals/species-constructor.js"}],"generated":{"js":"'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar toLength = require('../internals/to-length');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar speciesConstructor = require('../internals/species-constructor');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\n\n// `%TypedArray%.prototype.subarray` method\n// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.subarray\nArrayBufferViewCore.exportProto('subarray', function subarray(begin, end) {\n  var O = aTypedArray(this);\n  var length = O.length;\n  var beginIndex = toAbsoluteIndex(begin, length);\n  return new (speciesConstructor(O, O.constructor))(\n    O.buffer,\n    O.byteOffset + beginIndex * O.BYTES_PER_ELEMENT,\n    toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - beginIndex)\n  );\n});\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/core-js/modules/es.typed-array.subarray.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/core-js/modules/es.typed-array.subarray.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/core-js/modules/es.typed-array.subarray.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/core-js/modules/es.typed-array.subarray.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/core-js/modules/es.typed-array.subarray.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/core-js/modules/es.typed-array.subarray.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/core-js/modules/es.typed-array.subarray.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/core-js/modules/es.typed-array.subarray.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/core-js/modules/es.typed-array.subarray.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/core-js/modules/es.typed-array.subarray.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/core-js/modules/es.typed-array.subarray.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/core-js/modules/es.typed-array.subarray.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/core-js/modules/es.typed-array.subarray.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/core-js/modules/es.typed-array.subarray.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/core-js/modules/es.typed-array.subarray.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/core-js/modules/es.typed-array.subarray.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/core-js/modules/es.typed-array.subarray.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/core-js/modules/es.typed-array.subarray.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/core-js/modules/es.typed-array.subarray.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/core-js/modules/es.typed-array.subarray.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/core-js/modules/es.typed-array.subarray.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}}],"sources":{"node_modules/core-js/modules/es.typed-array.subarray.js":"'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar toLength = require('../internals/to-length');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar speciesConstructor = require('../internals/species-constructor');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\n\n// `%TypedArray%.prototype.subarray` method\n// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.subarray\nArrayBufferViewCore.exportProto('subarray', function subarray(begin, end) {\n  var O = aTypedArray(this);\n  var length = O.length;\n  var beginIndex = toAbsoluteIndex(begin, length);\n  return new (speciesConstructor(O, O.constructor))(\n    O.buffer,\n    O.byteOffset + beginIndex * O.BYTES_PER_ELEMENT,\n    toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - beginIndex)\n  );\n});\n"},"lineCount":21}},"error":null,"hash":"bfab3dc1008a158f8ca5491140811129","cacheData":{"env":{}}}